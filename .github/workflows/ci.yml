name: CI - QR Biometrics App

on:
  push:
    branches: [main]
  pull_request:

jobs:
  build-and-test:
    runs-on: macos-latest  # Change to ubuntu-latest if iOS build is not required

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # ğŸ”¹ Setup Flutter with cache
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.3'
          cache: true

      # ğŸ”¹ Cache Dart pub dependencies
      - name: Cache pub dependencies
        uses: actions/cache@v3
        with:
          path: ~/.pub-cache
          key: pub-cache-${{ runner.os }}-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: pub-cache-${{ runner.os }}-

      # ğŸ”¹ Cache fluttergen installation
      - name: Cache fluttergen
        uses: actions/cache@v3
        with:
          path: ~/.fluttergen
          key: fluttergen-${{ runner.os }}-v1
          restore-keys: fluttergen-${{ runner.os }}-

      # ğŸ”¹ Install fluttergen
      - name: Install fluttergen
        uses: FlutterGen/setup-fluttergen@v1
        with:
          version: 5.6.0

      # ğŸ”¹ Install Flutter dependencies
      - name: Install dependencies
        run: flutter pub get

      # ğŸ”¹ Generate Pigeon bindings for platform channels
      - name: Generate Pigeon bindings
        run: |
          dart run pigeon --input pigeons/session/session_api.dart
          dart run pigeon --input pigeons/biometrics/biometrics_api.dart
          dart run pigeon --input pigeons/scanner/qr_scanner_api.dart
          dart run pigeon --input pigeons/storage/local_storage_api.dart

      # ğŸ”¹ Generate translations with slang
      - name: Generate translations with slang
        run: dart run slang

      # ğŸ”¹ Generate assets with fluttergen
      - name: Generate assets with flutter_gen
        run: fluttergen

      # ğŸ”¹ Install lcov on macOS
      - name: Install lcov
        run: brew install lcov
      
      # ğŸ”¹ Run tests and collect coverage
      - name: Run tests with coverage
        run: |
          flutter test --coverage
          lcov --remove coverage/lcov.info \
            'lib/pigeon/*' \
            'lib/core/app/*' \
            'lib/core/navigation/*' \
            'lib/core/shared/presentation/blocs/app_bloc_observer.dart' \
            'lib/core/shared/presentation/screens/*' \
            'lib/core/shared/presentation/widgets/*' \
            'lib/features/**/presentation/screens/*' \
            'lib/features/**/presentation/widgets/*' \
            -o coverage/lcov.info \
            --ignore-errors unused

      # ğŸ”¹ Upload coverage report to Codecov
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage/lcov.info
          fail_ci_if_error: true
